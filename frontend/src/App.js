import React from "react";
import { useState, useEffect , useRef } from "react";
import './App.css';
import { Octokit } from "octokit";
import ArtistCard from "./components/artistCard";
import Timer from "./components/timer";
const CryptoJS = require('crypto-js');
const Papa = require('papaparse');

function encrypt(text, keyHex, ivHex) {
    const key = CryptoJS.enc.Hex.parse(keyHex);
    const iv = CryptoJS.enc.Hex.parse(ivHex);
    const encrypted = CryptoJS.AES.encrypt(text, key, { iv: iv });
    return encrypted.ciphertext.toString(CryptoJS.enc.Hex);
}

function decrypt(encryptedText, keyHex, ivHex) {
  const key = CryptoJS.enc.Hex.parse(keyHex);
  const iv = CryptoJS.enc.Hex.parse(ivHex);
  const encryptedTextBytes = CryptoJS.enc.Hex.parse(encryptedText);
  
  const decrypted = CryptoJS.AES.decrypt(
      { ciphertext: encryptedTextBytes },
      key,
      { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }
  );
  
  return decrypted.toString(CryptoJS.enc.Utf8);
}

const keyHex = '01eda8f0bcae94a569139c6126dd5d2929863500de660b3f6414d0b4c9cc3770'; // 256-bit 
const ivHex = 'b22ec2381daab4d862d5c76ab07c00d8'; // 128-bit 

async function get_secret(){
  let apiKey = "E78j6jYcHFMz6miZXvmdoVdbW5ywhB9JunEfD980pK0="
  let encryptedAPIKey = encrypt(apiKey, keyHex, ivHex)
  const myHeaders = new Headers();
  myHeaders.append("Authorization", `Bearer ${encryptedAPIKey}`);

  const requestOptions = {
    mode: 'cors',
    method: "GET",
    headers: myHeaders,
    redirect: "follow"
  };
  
  let data = await fetch("https://way-out-west-app-backend.vercel.app/protected", requestOptions)
  .then(response => response.json())
  .then(data => {return data;})
  .catch(error => console.error(error));
  return data;
}

async function test(){
  const secretKey = await get_secret();
  let key = secretKey['key'];
  
  const octokit = new Octokit({ 
    auth: decrypt(key, keyHex, ivHex)
  });
  const sha = await octokit.request('GET /repos/{owner}/{repo}/contents/{path}', {
    owner: 'sebastian-axell',
    repo: 'way_out_west',
    path: 'data.csv',
    headers: {
      'X-GitHub-Api-Version': '2022-11-28'
    }
  }).then(response => {
    return response['data']['sha'];
  })
  const csv_data = await octokit.request('GET /repos/{owner}/{repo}/git/blobs/{file_sha}', {
    owner: 'sebastian-axell',
    repo: 'way_out_west',
    file_sha: sha,
    headers: {
      'X-GitHub-Api-Version': '2022-11-28'
    }
  }).then(response=> {
    return response['data'];
  });
  const decodedString = atob(csv_data['content']);
      const lines = decodedString.split("\n");
      const dataArray = lines.map(line => {
        const decodedLine = decodeURIComponent(escape(line.trim())); 
        return decodedLine;
      }).join('\n')
      const parsedData = Papa.parse(dataArray.trim(), { header: true }).data;
      console.log(parsedData);
      return parsedData;
}

async function uploadCSV(base64Content){
  const secretKey = await get_secret();
  let key = secretKey['key'];
  
  const octokit = new Octokit({ 
    auth: decrypt(key, keyHex, ivHex)
  });

  await octokit.request('PUT /repos/{owner}/{repo}/contents/{path}', {
    owner: 'OWNER',
    repo: 'REPO',
    path: 'PATH',
    message: 'a new commit message',
    committer: {
      name: 'Monalisa Octocat',
      email: 'octocat@github.com'
    },
    content: 'bXkgdXBkYXRlZCBmaWxlIGNvbnRlbnRz',
    sha: '95b966ae1c166bd92f8ae7d1c313e738c731dfc3',
    headers: {
      'X-GitHub-Api-Version': '2022-11-28'
    }
  })
}

function updateCSVData(data){
  const csvString = Papa.unparse(data);
  const base64Content = btoa(encodeURIComponent(csvString));

}

function App() {
  const [data, setData] = useState(true);
  const [selectedDay, setSelectedDay] = useState("thursday")
  const parentRef = useRef(null);
  const childRef = useRef(null);

  const getData = async () =>{
    await test().then(response=>{
      setData(response)
    })
  }

  const updateData = (index, keenData) => {
    setData(prevItems => {
      const updatedItems = [...prevItems]; // Create a copy of the current array
      updatedItems[index]['keen'] = keenData; // Update the desired index with the new value
      return updatedItems; // Set the updated array back to the state
    });
    updateCSVData(data);
  }

  useEffect(() => {
    getData()
  }, []);

  



  useEffect(() => {
    const childHeight = childRef.current.clientHeight;
    console.log(childHeight);
  }, []);
  
  return (
    <div class="bg-pink-200 h-screen overflow-y-auto w-full " ref={childRef}>
      <div className="h-16 lg:h-20 absolute z-10 bg-teal-700 w-full" id="header">
        <div className="mx-auto w-fit flex h-full pb-1 justify-center">
        <svg
      xmlns="http://www.w3.org/2000/svg"
      width="433.974"
      height="70.784"
      version="1.1"
      viewBox="0 0 114.822 18.728"
    >
      <g
        strokeDasharray="none"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="1.323"
        transform="translate(-45.586 -65.165)"
      >
        <path
          d="M68.83 71.315L63.19 81.73l-3.326.011L57.748 74l-2.008 7.756-3.326.012-6.166-10.716 6.125-1.18 1.82 8.183 2.117-8.196 2.806-4.033 2.262 12.203 1.85-8.195zm9.64 5.957l-8.1.477c.044.703.306 1.24.788 1.611.486.371 1.2.555 2.138.552a4.708 4.708 0 001.729-.334c.557-.22.997-.456 1.32-.708h.313l.54 4.332c-.636.263-1.767-1.57-2.33-1.45-.563.119-1.186.18-1.87.182-1.764.007-3.116-.393-4.058-1.2-.942-.806-1.416-1.957-1.42-3.454-.006-1.48.434-2.654 1.318-3.52.889-.87 2.108-1.31 3.658-1.315 1.43-.005 2.506.361 3.228 1.1.723.732 1.086 1.79 1.091 3.175zm-4.46-1.221c-.017-.602-.164-1.054-.442-1.357-.278-.302-.9 1.818-1.484 1.82-.542.002-.797-2.123-1.146-1.834-.348.289-.542.75-.582 1.384z"
          style={{}}
          fill="#fff"
          stroke="#1a1a1a"
          ariaLabel="We"
        ></path>
        <path
          d="M92.245 74.757c.006 1.896-.52 3.405-1.581 4.527-1.06 1.117-2.53 1.68-4.409 1.686-1.873.006-5.695.071-6.763-1.038-1.068-1.114.746-3.236.74-5.132-.007-1.912.52-3.424 1.58-4.535 1.06-1.117 2.735-.812 4.4-1.686 4.28-2.243 3.34.545 4.413 1.654 1.073 1.104 1.613 2.612 1.62 4.524zm-3.973 3.026c.29-.363.506-.79.645-1.28.139-.496.207-1.077.205-1.743-.002-.713-.085-1.32-.249-1.82-.163-.5-.376-.904-.638-1.212a2.37 2.37 0 00-.926-.692 2.775 2.775 0 00-1.08-.212 2.83 2.83 0 00-1.08.212c-.333.14-.64.37-.921.69-.26.3-.472.713-.638 1.24-.16.523-.238 1.13-.236 1.823.002.708.083 1.312.241 1.812.164.495.376.9.638 1.213.262.313.568.543.918.691.35.148.718.221 1.105.22a2.784 2.784 0 001.102-.228c.35-.155.654-.393.914-.714zm15.604 2.52l-3.534.369-.002-.99c-.52.406-.997.716-1.429.931-.432.21-.948.315-1.548.317-.97.004-1.72-.279-2.25-.847-.523-.568-.787-1.408-.79-2.521l-.02-5.84 3.909-1.466-1.078 4.191c-.112.436.131 2.192.159 2.496.032.298.002.898.107 1.095.1.197.025.11.223.2.204.09.71.364 1.07.363.24-.001.506-.047.798-.139.292-.092.573-.226.844-.402l-.022-6.36 2.817-.01zm7.564.25a7.37 7.37 0 01-.962.186c-.34.05-.754.075-1.244.077-1.096.004-1.913-.22-2.452-.67-.534-.451-2.202.244-1.982-.83l1.16-5.686-1.157.004-.007-1.95 1.158-.004-.009-2.564 2.817-.01.01 2.564 3.59-1.404-.946 3.344-2.638.01.011 3.179c0 .314.005.588.011.823.007.234.05.444.128.63a.904.904 0 00.385.446c.188.106.46.158.814.157.146 0 .336-.033.571-.098.24-.065.407-.124.5-.177l.235-.001z"
          style={{}}
          fill="#fff"
          stroke="#1a1a1a"
          ariaLabel="Out"
        ></path>
        <text
          xmlSpace="preserve"
          style={{}}
          x="89.374"
          y="77.827"
          fill="#000"
          fillOpacity="1"
          fontFamily="Sans"
          fontSize="11.289"
          fontWeight="bold"
          transform="rotate(-.2)"
        ></text>
        <path
          d="M132.06 68.773l-2.019 13.603-4.404-1.685-2.117-7.741-2.008 7.756-3.326.012-3.18-11.884 3.139-.011 1.82 8.182 2.117-8.196 4.435-2.304.633 10.474 1.85-8.195zm10.53 7.903l-6.448.023c.044.703.71 1.475 1.192 1.846.486.37.795.32 1.734.317a4.708 4.708 0 001.729-.334c.557-.22.998-.456 1.32-.708h.313l.367 3.382c-.635.263-1.593-.62-2.156-.5-.563.119-1.186.18-1.87.182-1.763.006-3.116-.394-4.058-1.2-.942-.806-1.416-1.957-1.42-3.454-.007-1.48.434-2.654 1.318-3.52.889-.871 2.108-1.31 3.658-1.315 1.43-.005 2.506.361 3.228 1.099.723.732 1.968-.617 1.72.744zm-2.807-1.675c-.018-.602-.165-1.054-.443-1.357-.278-.303-.709-.453-1.293-.45-.543.001-.988.147-1.337.435-.348.29-.542.75-.582 1.385zm12.438 2.751c.002.927-.401 1.676-1.213 2.25-.812.567-1.925.853-3.34.858a9.354 9.354 0 01-2.129-.216c-.637-.147-1.149-.31-1.535-.49l-.01-2.365h.259c.14.1.303.212.486.333.188.117.452.244.792.381.293.121.624.227.995.316.37.084.413.12.834.084.664-.057.896.005 1.162-.118.266-.129.82-.346.82-.591-.001-.219-.08-.375-.237-.47-.157-.101-.455-.196-.893-.285a11.591 11.591 0 00-.854-.149 9.655 9.655 0 01-.971-.204c-.799-.21-1.392-.538-1.78-.984-.388-.452-.583-1.013-.585-1.684-.002-.863.394-1.58 1.19-2.153.802-.578-1.429-2.567-.041-2.572.657-.002 4.612 1.762 5.212 1.898.606.131 1.079.273 1.418.427l.007 2.268-.242.001a5.574 5.574 0 00-1.435-.706 4.87 4.87 0 00-1.621-.273c-.454.001-.837.067-1.15.196-.307.128-.46.31-.46.544.001.213.072.376.213.487.142.111.473.222.995.332.288.057.596.115.925.172.334.052.668.12 1.002.204.742.195 1.29.504 1.647.93.356.419.535.945.537 1.58zm7.5 2.737c-.303.081-1.37.045-1.708.088-.34.05-.008.174-.499.176-1.096.004-1.913-.22-2.452-.67-.534-.451-.802-1.225-.806-2.322l-.014-4.194-1.785 1.033.62-2.978 1.158-.005-1.62-3.325 4.428.751.01 2.564 2.056.006.587 1.934-2.637.01.06 1.067c.017.31-.044 2.7-.038 2.935.007.234.049.444.127.63a.904.904 0 00.385.446c.189.106.46.159.815.157.146 0 1.033-1.204 1.267-1.269.24-.064-.29 1.047-.196.994l.235-.001z"
          style={{}}
          fill="#fff"
          stroke="#1a1a1a"
          ariaLabel="West"
        ></path>
      </g>
    </svg>
        </div>
      </div>   
      <div className="flex justify-between h-max">
      <div className="bg-teal-300 opacity-50 w-0/12 lg:w-[5rem] xl:w-[6rem] relative hidden lg:block max-h-none overflow-y-clip">
            <div className="rotate-90" >
                <div className="min-w-max flex space-x-7 mt-32" >
                <div className="-rotate-180">
                <svg
      xmlns="http://www.w3.org/2000/svg"
      width="440.35"
      height="68.949"
      version="1.1"
      viewBox="0 0 116.509 18.243"
    >
      <defs>
        <path d="M113.4 55.982H513.89V147.851H113.4z"></path>
      </defs>
      <g
        strokeLinecap="round"
        strokeWidth="1.323"
        fontFamily="Sans"
        fontWeight="bold"
        transform="translate(-33.832 -92.793)"
      >
        <text
          xmlSpace="preserve"
          style={{}}
          x="98.874"
          y="94.146"
          fill="#000"
          fillOpacity="1"
          fontSize="11.289"
          transform="rotate(-.2)"
        ></text>
        <path
          style={{
            InkscapeFontSpecification: "'Sans, Bold'",
            whiteSpace: "pre",
          }}
          fill="#fff"
          stroke="#1a1a1a"
          d="M45.317 106.34c-.514.206-1.195.412-2.043.619-.848.201-1.693.302-2.536.302-1.953 0-3.987 1.496-5.092.405-1.105-1.096-1.152-4.65-1.152-6.577 0-1.837.557-3.318 1.672-4.44 1.116-1.128 2.67-1.692 4.664-1.692.756 0 4.288-1.24 4.972-1.098.683.138 1.444.416 2.281.834l-2.812 4.085h-.332a27.755 27.755 0 00-.632-.469 7.29 7.29 0 00-.802-.524 5.15 5.15 0 00-1.048-.437 4.275 4.275 0 00-1.264-.183c-.525 0-1 .08-1.426.238a3.29 3.29 0 00-1.15.731c-.323.318-.58.723-.77 1.216-.185.487-.277 1.05-.277 1.691 0 1.308.336 2.31 1.01 3.003.673.694 1.667 1.04 2.983 1.04.113 0 .236-.003.37-.008.139-.005 2.644.279 2.757.268l-2.38-2.61h-2.29V100.5h5.297zm11.347-3.782c0 1.467 1.099 5.176.266 6.023-.827.842-3.506-1.288-5.007-1.288-1.5 0-2.667-.421-3.5-1.263-.827-.848-1.24-2.005-1.24-3.472 0-1.477.416-2.637 1.248-3.479.838-.842 2.002-1.262 3.492-1.262 1.511 0 2.678.423 3.5 1.27.828.848 1.241 2.005 1.241 3.471zm-3.415 2.169c.18-.228.314-.5.401-.818.093-.323.14-.768.14-1.335 0-.524-.047-.963-.14-1.318-.092-.355-.22-.638-.385-.85a1.357 1.357 0 00-.594-.46c-.231-.09-.697 3-.964 3s-.29-3.099-.5-3.025c-.206.075-.404.223-.594.445-.17.207-.306.49-.409.85-.097.36-.146.813-.146 1.358 0 .488.044.911.131 1.271.087.355.216.641.385.858.165.207.36.358.586.453.232.095.494.143.787.143.251 0 .49-.043.717-.127.23-.09.426-.239.585-.445zm10.94 2.208c-.299.08-.615.14-.949.183a8.865 8.865 0 01-1.226.071c-1.079 0-1.883-.225-2.412-.675-.525-.45-.787-1.22-.787-2.311l.65-1.691-1.79-2.48v-1.937h1.14v-2.55h2.775l.361-.44-.503 3.135 2.74 1.793H61.59v3.16c0 .313.003.586.008.82.005.232.046.441.124.627a.896.896 0 00.377.444c.185.106.452.16.802.16.144 0 .331-.033.563-.096.236-.064.4-.122.493-.175h.231zm10.352.08h-2.79v-4.425c0-.36-.018-.717-.054-1.072-.036-.36-.098-.625-.185-.794a.931.931 0 00-.455-.43c-.195-.09-.47-.134-.825-.134-.252 0-.437 2.594-.699 2.679-.257.084-.609-2.332-.912-2.147v6.322l-2.487-1.895-.288-10.464h2.775v4.424a7.103 7.103 0 011.418-.913 3.57 3.57 0 011.52-.318c.934 0 4.188-2.125 4.713-1.564.529.561-1.73 3.807-1.73 4.924zm11.078-3.932h-6.352c.041.699.298 1.234.77 1.604.479.37 1.18.556 2.105.556a4.6 4.6 0 001.704-.325c.55-.218.984-.45 1.303-.7h.308l.866 3.608c-.627.26-2.084-.864-2.639-.748a8.987 8.987 0 01-1.842.175c-1.737 0-3.068-.403-3.993-1.208-.926-.804-.883-2.243-.883-3.73 0-1.473-.068-2.346.805-3.204.88-.863 3.524-2.607 5.05-2.607 1.409 0 1.025 1.68 1.734 2.417.71.73-2.935 2.489-1.676 3.015zm-2.76-1.676c-.015-.599-.159-1.049-.431-1.35-.273-.302-.697-.453-1.272-.453-.535 0-.974.143-1.319.429-.344.286-.537.744-.578 1.374zm13.414 5.607h-2.79v-4.424c0-.36-.019-.717-.055-1.072-.036-.36-1.684 1.125-1.771.955-.103-.195 1.332-2.088 1.131-2.178-.195-.09-.47-.135-.824-.135-.252 0-.51.042-.771.127-.257.084-.537.22-.84.405v6.322h-2.776v-8.92l3.352-1.093-.577 2.078a7.103 7.103 0 011.419-.913 3.57 3.57 0 011.518-.318c.936 0 2.315-.302 2.839.259.53.561 1.069 3.898.866 4.997zm12.527-3.621c0 .571-.113 1.082-.34 1.532-.22.45.916 2.72.526 3.016-.453.35-2.394-1.297-2.938-1.149-.54.148-1.226.223-2.059.223h-5.01l-1.803-11.463 7.7-1.385c.912-.164.16 1.052.586 1.116.432.063.858.204 1.28.42.436.228.76.535.97.922.217.381.325.818.325 1.31 0 .573-.147 1.078-.44 1.518-.293.434-.706.773-1.24 1.016v.064c.75.154 1.343.471 1.78.953.442.482.663 1.117.663 1.906zm-3.793-4.862c0-.196-.049-.391-.146-.587-.093-.196-.26-.342-.502-.437a2.337 2.337 0 00-.809-.135c-.319-.01-.768-.016-1.349-.016h-.278v2.502h.463c.468 0 .866-.008 1.195-.024.329-.016.588-.069.778-.159.268-.122 1.813 2.128 1.895 1.938.082-.196-1.247-2.827-1.247-3.082zm.725 4.814c0-.376-.072-.665-.216-.866-.139-.206-.378-.36-.717-.46-.231-.07-.55-.107-.956-.112-.406-.005-.83-.008-1.272-.008h-.648v2.947l-1.082-.073c-.83-.056 2.727.07 3.087.065.36-.005.691-.074.994-.206.309-.133.52-.308.632-.525a1.6 1.6 0 00.178-.762zm13.745 3.67H116.7v-.985c-.513.402-.551 2.459-.978 2.67-.426.207-1.368-1.44-1.959-1.44-.956 0-1.693-.283-2.212-.85-.514-.566-.414-2.571-.483-3.676l-.288-4.64 3.728 1.97-.937 2.455c-.16.42.012.826.038 1.128.03.296.098.542.2.738a.9.9 0 00.44.43c.2.09.478.134.833.134.236 0 .498-.045.786-.135.288-.09.565-.222.832-.397l.505-5.229 3.136-2.843zm8.896-6.196h-.247a2.427 2.427 0 00-.57-.095c-.263-.022-.553.624-.728.624-.396 0-.673-.63-.976-.577-.303.053-.63.143-.98.27v5.974l-4 .437 1.226-9.357 3.64-2.115-.865 3.425c.611-.54 1.143-.897 1.596-1.072.452-.18.868-.27 1.248-.27.098 0 .209.002.332.008.123.005 2.106-1.3 2.199-1.289zm9.99 5.17c-.056.836 1.688 2.635 1.457 3.207-.232.572-2.358-.074-2.775.25-.416.327-.92.563-1.51.706a8.126 8.126 0 01-1.99.222c-.6 0-1.194-.037-1.78-.11a13.38 13.38 0 01-1.511-.27v-2.233l-1.897.583c.34.138 2.989-.32 3.477-.21.488.117.925.175 1.31.175.514 0 .93-.05 1.25-.15.323-.096.57-.234.74-.414.159-.17.274-.386.346-.651.072-.265.108-.583.108-.953v-.167a4.11 4.11 0 01-1.11.667 3.59 3.59 0 01-1.357.246c-1.212 0-2.148-.376-2.806-1.127-.657-.752-.986-1.896-.986-3.432 0-.736.1-1.371.3-1.906.2-.535.483-1.001.848-1.398.34-.37.756-.66 1.25-.866a3.954 3.954 0 011.525-.31c.468 0 .892.059 1.272.175a3.96 3.96 0 011.049.469l.1-.397 3.34-1.677zm-2.27-1.932l-.505-3.897a2.479 2.479 0 00-.586-.16 3.5 3.5 0 00-.624-.063c-.73 0-1.277.217-1.642.652-.365.429-.764 1.03-.764 1.803 0 .858.37 1.456.68 1.795.313.339.775.508 1.387.508.277 0 .55-.045.817-.135.267-.09 1.016-.355 1.237-.503zm13.587 2.958l-1.853 2.041-.937-6.466c-.052-.356-.018-.717-.054-1.072-.036-.36-.098-.625-.186-.794a.931.931 0 00-.454-.43c-.196-.09-.47-.134-.825-.134-.252 0-.509.042-.771.127-.257.084-.249 2.626-.552 2.81l-.288 3.918-3.425 1.458-1.658-13.964 5.083.146v4.424a7.103 7.103 0 011.418-.913c.457-.212 1.685-2.286 2.24-2.286.935 0 .944 2.249 1.468 2.81.53.562.794 1.4.794 2.518z"
          ariaLabel="GothenBurgh"
          fontSize="42.667"
        ></path>
      </g>
                </svg>
                </div>
              </div>
          </div>
        </div>
          <div className="w-full">
            <div className="mt-24 md:mt-24 lg:mt-32 mb-5 md:mb-10 xl:mb-12 w-full flex justify-center">
              {/* sm:w-8/12 lg:w-5/12 xl:w-3/12 */}
              <div className="flex text-sm  md:text-2xl w-fit space-x-3 md:space-x-8 lg:space-x-16 xl:space-x-24 inline-flex items-center justify-around py-1 md:py-2 px-4 text-gray-500 rounded-lg">
                <button value={"thursday"} className={`transition-transform rounded-xl rounded transition ${ selectedDay == "thursday" ?  "bg-white border border-green-900" : "bg-pink-100"} px-2 md:px-6  py-1 hover:-translate-y-1 relative`} onClick={()=>{setSelectedDay("thursday")}}>thursday</button>
                <button value={"friday"} className={`transition-transform rounded-xl rounded transition ${ selectedDay == "friday" ?  "bg-white border border-green-900" : "bg-pink-100"} px-2 md:px-6 py-1 hover:-translate-y-1`} onClick={()=>{setSelectedDay("friday");}}>friday</button>
                <button className={`transition-transform rounded-xl transition rounded ${ selectedDay == "saturday" ?  "bg-white border border-green-900" : "bg-pink-100"} px-2 md:px-6 py-1 hover:-translate-y-1`} value={"saturday"} onClick={()=>{setSelectedDay("saturday")}}>saturday</button>
              </div>
            </div>
          <div class="w-11/12 md:w-10/12 lg:w-10/12 xl:w-11/12 mx-auto">
            <div className="grid grid-cols-2 gap-x-4 xl:gap-x-7 xl:gap-y-12 md:grid-cols-3 xl:grid-cols-4 mb-16">
              {Object.keys(data).map((dataEntry, value) =>(
                data[value]['day'] == selectedDay && <ArtistCard key={value} index={value} updateData={updateData} data={data[value]}/>
              ))}
            </div>
          </div>
        </div>
        <div className="bg-teal-300 bg-opacity-50 w-0/12 lg:w-[5rem] xl:w-[5rem] relative hidden lg:block max-h-none overflow-y-clip">
            <div className="rotate-90" >
                <div className="opacity-75 min-w-max flex space-x-7 mt-32" >
                <svg
      xmlns="http://www.w3.org/2000/svg"
      width="440.35"
      height="68.949"
      version="1.1"
      viewBox="0 0 116.509 18.243"
    >
      <defs>
        <path d="M113.4 55.982H513.89V147.851H113.4z"></path>
      </defs>
      <g
        strokeLinecap="round"
        strokeWidth="1.323"
        fontFamily="Sans"
        fontWeight="bold"
        transform="translate(-33.832 -92.793)"
      >
        <text
          xmlSpace="preserve"
          style={{}}
          x="98.874"
          y="94.146"
          fill="#000"
          fillOpacity="1"
          fontSize="11.289"
          transform="rotate(-.2)"
        ></text>
        <path
          style={{
            InkscapeFontSpecification: "'Sans, Bold'",
            whiteSpace: "pre",
          }}
          fill="#fff"
          stroke="#1a1a1a"
          d="M45.317 106.34c-.514.206-1.195.412-2.043.619-.848.201-1.693.302-2.536.302-1.953 0-3.987 1.496-5.092.405-1.105-1.096-1.152-4.65-1.152-6.577 0-1.837.557-3.318 1.672-4.44 1.116-1.128 2.67-1.692 4.664-1.692.756 0 4.288-1.24 4.972-1.098.683.138 1.444.416 2.281.834l-2.812 4.085h-.332a27.755 27.755 0 00-.632-.469 7.29 7.29 0 00-.802-.524 5.15 5.15 0 00-1.048-.437 4.275 4.275 0 00-1.264-.183c-.525 0-1 .08-1.426.238a3.29 3.29 0 00-1.15.731c-.323.318-.58.723-.77 1.216-.185.487-.277 1.05-.277 1.691 0 1.308.336 2.31 1.01 3.003.673.694 1.667 1.04 2.983 1.04.113 0 .236-.003.37-.008.139-.005 2.644.279 2.757.268l-2.38-2.61h-2.29V100.5h5.297zm11.347-3.782c0 1.467 1.099 5.176.266 6.023-.827.842-3.506-1.288-5.007-1.288-1.5 0-2.667-.421-3.5-1.263-.827-.848-1.24-2.005-1.24-3.472 0-1.477.416-2.637 1.248-3.479.838-.842 2.002-1.262 3.492-1.262 1.511 0 2.678.423 3.5 1.27.828.848 1.241 2.005 1.241 3.471zm-3.415 2.169c.18-.228.314-.5.401-.818.093-.323.14-.768.14-1.335 0-.524-.047-.963-.14-1.318-.092-.355-.22-.638-.385-.85a1.357 1.357 0 00-.594-.46c-.231-.09-.697 3-.964 3s-.29-3.099-.5-3.025c-.206.075-.404.223-.594.445-.17.207-.306.49-.409.85-.097.36-.146.813-.146 1.358 0 .488.044.911.131 1.271.087.355.216.641.385.858.165.207.36.358.586.453.232.095.494.143.787.143.251 0 .49-.043.717-.127.23-.09.426-.239.585-.445zm10.94 2.208c-.299.08-.615.14-.949.183a8.865 8.865 0 01-1.226.071c-1.079 0-1.883-.225-2.412-.675-.525-.45-.787-1.22-.787-2.311l.65-1.691-1.79-2.48v-1.937h1.14v-2.55h2.775l.361-.44-.503 3.135 2.74 1.793H61.59v3.16c0 .313.003.586.008.82.005.232.046.441.124.627a.896.896 0 00.377.444c.185.106.452.16.802.16.144 0 .331-.033.563-.096.236-.064.4-.122.493-.175h.231zm10.352.08h-2.79v-4.425c0-.36-.018-.717-.054-1.072-.036-.36-.098-.625-.185-.794a.931.931 0 00-.455-.43c-.195-.09-.47-.134-.825-.134-.252 0-.437 2.594-.699 2.679-.257.084-.609-2.332-.912-2.147v6.322l-2.487-1.895-.288-10.464h2.775v4.424a7.103 7.103 0 011.418-.913 3.57 3.57 0 011.52-.318c.934 0 4.188-2.125 4.713-1.564.529.561-1.73 3.807-1.73 4.924zm11.078-3.932h-6.352c.041.699.298 1.234.77 1.604.479.37 1.18.556 2.105.556a4.6 4.6 0 001.704-.325c.55-.218.984-.45 1.303-.7h.308l.866 3.608c-.627.26-2.084-.864-2.639-.748a8.987 8.987 0 01-1.842.175c-1.737 0-3.068-.403-3.993-1.208-.926-.804-.883-2.243-.883-3.73 0-1.473-.068-2.346.805-3.204.88-.863 3.524-2.607 5.05-2.607 1.409 0 1.025 1.68 1.734 2.417.71.73-2.935 2.489-1.676 3.015zm-2.76-1.676c-.015-.599-.159-1.049-.431-1.35-.273-.302-.697-.453-1.272-.453-.535 0-.974.143-1.319.429-.344.286-.537.744-.578 1.374zm13.414 5.607h-2.79v-4.424c0-.36-.019-.717-.055-1.072-.036-.36-1.684 1.125-1.771.955-.103-.195 1.332-2.088 1.131-2.178-.195-.09-.47-.135-.824-.135-.252 0-.51.042-.771.127-.257.084-.537.22-.84.405v6.322h-2.776v-8.92l3.352-1.093-.577 2.078a7.103 7.103 0 011.419-.913 3.57 3.57 0 011.518-.318c.936 0 2.315-.302 2.839.259.53.561 1.069 3.898.866 4.997zm12.527-3.621c0 .571-.113 1.082-.34 1.532-.22.45.916 2.72.526 3.016-.453.35-2.394-1.297-2.938-1.149-.54.148-1.226.223-2.059.223h-5.01l-1.803-11.463 7.7-1.385c.912-.164.16 1.052.586 1.116.432.063.858.204 1.28.42.436.228.76.535.97.922.217.381.325.818.325 1.31 0 .573-.147 1.078-.44 1.518-.293.434-.706.773-1.24 1.016v.064c.75.154 1.343.471 1.78.953.442.482.663 1.117.663 1.906zm-3.793-4.862c0-.196-.049-.391-.146-.587-.093-.196-.26-.342-.502-.437a2.337 2.337 0 00-.809-.135c-.319-.01-.768-.016-1.349-.016h-.278v2.502h.463c.468 0 .866-.008 1.195-.024.329-.016.588-.069.778-.159.268-.122 1.813 2.128 1.895 1.938.082-.196-1.247-2.827-1.247-3.082zm.725 4.814c0-.376-.072-.665-.216-.866-.139-.206-.378-.36-.717-.46-.231-.07-.55-.107-.956-.112-.406-.005-.83-.008-1.272-.008h-.648v2.947l-1.082-.073c-.83-.056 2.727.07 3.087.065.36-.005.691-.074.994-.206.309-.133.52-.308.632-.525a1.6 1.6 0 00.178-.762zm13.745 3.67H116.7v-.985c-.513.402-.551 2.459-.978 2.67-.426.207-1.368-1.44-1.959-1.44-.956 0-1.693-.283-2.212-.85-.514-.566-.414-2.571-.483-3.676l-.288-4.64 3.728 1.97-.937 2.455c-.16.42.012.826.038 1.128.03.296.098.542.2.738a.9.9 0 00.44.43c.2.09.478.134.833.134.236 0 .498-.045.786-.135.288-.09.565-.222.832-.397l.505-5.229 3.136-2.843zm8.896-6.196h-.247a2.427 2.427 0 00-.57-.095c-.263-.022-.553.624-.728.624-.396 0-.673-.63-.976-.577-.303.053-.63.143-.98.27v5.974l-4 .437 1.226-9.357 3.64-2.115-.865 3.425c.611-.54 1.143-.897 1.596-1.072.452-.18.868-.27 1.248-.27.098 0 .209.002.332.008.123.005 2.106-1.3 2.199-1.289zm9.99 5.17c-.056.836 1.688 2.635 1.457 3.207-.232.572-2.358-.074-2.775.25-.416.327-.92.563-1.51.706a8.126 8.126 0 01-1.99.222c-.6 0-1.194-.037-1.78-.11a13.38 13.38 0 01-1.511-.27v-2.233l-1.897.583c.34.138 2.989-.32 3.477-.21.488.117.925.175 1.31.175.514 0 .93-.05 1.25-.15.323-.096.57-.234.74-.414.159-.17.274-.386.346-.651.072-.265.108-.583.108-.953v-.167a4.11 4.11 0 01-1.11.667 3.59 3.59 0 01-1.357.246c-1.212 0-2.148-.376-2.806-1.127-.657-.752-.986-1.896-.986-3.432 0-.736.1-1.371.3-1.906.2-.535.483-1.001.848-1.398.34-.37.756-.66 1.25-.866a3.954 3.954 0 011.525-.31c.468 0 .892.059 1.272.175a3.96 3.96 0 011.049.469l.1-.397 3.34-1.677zm-2.27-1.932l-.505-3.897a2.479 2.479 0 00-.586-.16 3.5 3.5 0 00-.624-.063c-.73 0-1.277.217-1.642.652-.365.429-.764 1.03-.764 1.803 0 .858.37 1.456.68 1.795.313.339.775.508 1.387.508.277 0 .55-.045.817-.135.267-.09 1.016-.355 1.237-.503zm13.587 2.958l-1.853 2.041-.937-6.466c-.052-.356-.018-.717-.054-1.072-.036-.36-.098-.625-.186-.794a.931.931 0 00-.454-.43c-.196-.09-.47-.134-.825-.134-.252 0-.509.042-.771.127-.257.084-.249 2.626-.552 2.81l-.288 3.918-3.425 1.458-1.658-13.964 5.083.146v4.424a7.103 7.103 0 011.418-.913c.457-.212 1.685-2.286 2.24-2.286.935 0 .944 2.249 1.468 2.81.53.562.794 1.4.794 2.518z"
          ariaLabel="GothenBurgh"
          fontSize="42.667"
        ></path>
      </g>
                </svg>
              </div>
          </div>
        </div>
      </div>
    </div>
  );
}

              {/* <Timer/> */}
              <svg
      xmlns="http://www.w3.org/2000/svg"
      width="358.364"
      height="64.068"
      version="1.1"
      viewBox="0 0 94.817 16.951"
    >
      <g
        strokeLinecap="round"
        strokeWidth="1.323"
        transform="translate(-55.578 -65.877)"
      >
        <path
          d="M75.077 71.921l-4.608 8.337-2.718.01-1.73-6.198-1.64 6.21-2.718.009-5.039-8.579 5.005-.943 1.488 6.55 1.73-6.562 2.293-3.228 1.848 9.769 1.511-6.56zm7.878 4.769l-6.62.382c.036.562.25.992.644 1.29.397.296.98.444 1.747.44.486 0 .957-.09 1.413-.266.455-.177.815-.366 1.079-.567h.255l.734 4.184c-.52.211-1.736-1.973-2.196-1.877-.46.095-.97.144-1.528.146-1.441.005-2.547-.315-3.316-.96-.77-.646-1.157-1.568-1.161-2.766-.004-1.185.355-2.124 1.077-2.817.727-.698 1.723-1.049 2.99-1.053 1.167-.004 2.047.289 2.637.88.59.586.888 1.433.892 2.542zm-3.645-.978c-.014-.482-.135-.844-.362-1.086-.227-.242-.734 1.455-1.212 1.457-.443.001-.652-1.7-.937-1.469-.284.232-.443.601-.475 1.108z"
          style={{}}
          fill="#fff"
          stroke="#1a1a1a"
          ariaLabel="We"
        ></path>
        <path
          d="M94.21 74.676c.005 1.518-.426 2.726-1.292 3.625-.867.894-2.068 1.343-3.603 1.349-1.53.005-4.653.057-5.526-.83-.873-.893.61-2.591.604-4.11-.005-1.53.425-2.74 1.292-3.63.866-.894 2.234-.65 3.596-1.349 3.496-1.796 2.728.436 3.605 1.324.877.884 1.318 2.09 1.323 3.621zM90.962 77.1c.238-.291.413-.633.527-1.025.114-.397.17-.862.168-1.395-.002-.571-.07-1.057-.204-1.457-.133-.4-.307-.724-.521-.97a1.934 1.934 0 00-.757-.554 2.309 2.309 0 00-.883-.17 2.354 2.354 0 00-.882.17 2.066 2.066 0 00-.752.552c-.213.24-.386.57-.521.993-.13.418-.195.905-.193 1.459.002.567.067 1.05.197 1.45.133.397.307.72.521.971.214.25.464.435.75.554.286.118.587.177.902.176.316-.001.616-.062.902-.182.285-.125.534-.316.746-.572zm12.165 2.304l-2.302.008-.002-.793a7.021 7.021 0 01-1.168.746c-.353.168-.775.252-1.265.254-.793.003-1.406-.223-1.838-.678-.428-.455-.643-1.127-.646-2.018l-.017-4.675 2.315-.008 1.389 2.082c.2.301-1.363 2.145-1.341 2.388.026.238.082.436.168.594.082.157-.29 1.05-.127 1.123.166.072.89-.672 1.184-.673.196 0 .413-.037.652-.11.238-.074.468-.181.69-.323l-.018-5.09 2.302-.009zm6.766-.088c-.247.065-.51.115-.786.15-.277.04-.616.06-1.017.061-.895.003-1.563-.175-2.003-.536-.437-.361-1.8.195-1.62-.664l.949-4.552-.947.003-.006-1.56.947-.004-.007-2.052 2.302-.009.007 2.053 2.934-1.124-.773 2.677-2.155.008.009 2.545c0 .251.004.47.009.658.006.188.04.356.104.505.06.15.165.268.314.357.154.085.376.127.666.126.12 0 .275-.027.466-.078.196-.052.333-.1.41-.143h.191z"
          style={{}}
          fill="#fff"
          stroke="#1a1a1a"
          ariaLabel="Out"
        ></path>
        <text
          xmlSpace="preserve"
          style={{}}
          x="89.374"
          y="77.827"
          fill="#000"
          fillOpacity="1"
          fontFamily="Sans"
          fontSize="11.289"
          fontWeight="bold"
          transform="rotate(-.2)"
        ></text>
        <path
          d="M126.743 69.886l-1.65 10.89-3.599-1.35-1.73-6.196-1.64 6.209-2.718.01-2.598-9.514 2.565-.01 1.487 6.55 1.73-6.56 3.624-1.845.517 8.385 1.512-6.56zm8.604 6.327l-5.269.018c.036.563.434 2.829.828 3.126.397.297.796-1.392 1.563-1.395.486-.002.957-.09 1.413-.267.455-.176.815-.365 1.079-.567h.255l.007 1.848a8.55 8.55 0 01-1.469.459c-.46.095-.97.144-1.528.146-1.44.005-2.546-.315-3.316-.96-.77-.646-1.156-1.567-1.16-2.766-.006-1.185.354-2.124 1.077-2.817.726-.698 1.723-1.049 2.989-1.053 1.168-.004 2.047.29 2.638.88.59.586 1.608-.494 1.405.596zm-2.294-1.342c-.014-.481-.135-.843-.362-1.086-.226-.242-.579-.362-1.056-.36-.443.001-.808.117-1.092.349-.285.23-.444.6-.476 1.108zm10.164 2.203c.002.742-.328 1.342-.992 1.8-.663.455-1.573.684-2.728.688a7.793 7.793 0 01-1.74-.173c-.52-.118-.939-.248-1.255-.392l-.007-1.893h.211c.115.08.248.169.397.266.154.094.37.195.647.305.24.097.51.182.814.253.302.067.627.1.972.099.452-.002.97 1.894 1.187 1.795.217-.103.142-2.198.141-2.394 0-.175-.065-.3-.193-.377-.128-.08-.372-.157-.73-.228a9.65 9.65 0 00-.698-.119c-.29-.046-.554-.1-.793-.163-.653-.169-1.138-.431-1.455-.788-.316-.362-.476-.81-.478-1.348-.002-.69.322-1.265.973-1.724.655-.462-1.168-2.054-.034-2.058.537-.002 3.769 1.41 4.26 1.52.494.104.88.218 1.158.34l.006 1.817h-.198a4.594 4.594 0 00-1.173-.565 4.053 4.053 0 00-1.324-.219c-.371.001-.684.054-.94.157-.25.103-.376.248-.375.436 0 .17.058.3.174.39.115.089.386.177.813.265.234.046.486.092.755.138.273.042.546.096.819.164.606.155 1.054.403 1.346.743.29.336.437.758.439 1.265zm6.127 2.191c-.247.065-1.17 1.657-1.447 1.692-.277.04.046-1.482-.355-1.48-.896.002-1.563-.177-2.004-.537-.436-.361-.656-.98-.659-1.86l-.011-3.357-.947.004-.006-1.56.947-.004-.007-2.053 2.302-.008.007 2.053 2.449-.999-.289 2.552-2.155.007.854.783c.185.17-.84 2.234-.836 2.421.006.188.04.356.105.505.06.15.165.268.314.357.154.085.376.127.666.126.12 0 .275-.027.466-.079.196-.052.332-.099.41-.142h.19z"
          style={{}}
          fill="#fff"
          stroke="#1a1a1a"
          ariaLabel="West"
        ></path>
      </g>
              </svg>
{/* <div className="flex justify-between">
  <div className="bg-teal-300 opacity-50 w-0/12 lg:w-[5rem] xl:w-[6rem] sm:max-w-xs content-center"></div> 
  <div className="w-full"></div>
  <div className="bg-teal-300 opacity-50 w-0/12 lg:w-[5rem] xl:w-[6rem]">
    text to be rotated and run alongside the full height of the div but always fit inside the div
  </div>
</div> */}

export default App;
{/* <div className="flex justify-between">
  <div className="bg-teal-300 opacity-50 w-0/12 lg:w-[5rem] xl:w-[6rem] sm:max-w-xs content-center"></div> 
  <div className="w-full"></div>
  <div className="bg-teal-300 opacity-50 w-0/12 lg:w-[5rem] xl:w-[6rem]">
      <div className="absolute inset-0 flex items-center justify-center bg-blue-400 overflow-y-clip my-auto">
            <div id="ok">
            </div>
      </div>
  </div>
</div> */}